# Generated by Django 4.1.3 on 2022-12-26 00:32

import ckeditor.fields
from django.db import migrations, models
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('catches', '0037_alter_fly_tag_name'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='bug',
            name='article',
        ),
        migrations.RemoveField(
            model_name='bug',
            name='image',
        ),
        migrations.RemoveField(
            model_name='bug',
            name='tag_name',
        ),
        migrations.RemoveField(
            model_name='bug_site',
            name='tag_name',
        ),
        migrations.RemoveField(
            model_name='fish',
            name='image',
        ),
        migrations.RemoveField(
            model_name='fish',
            name='tag_name',
        ),
        migrations.RemoveField(
            model_name='fly',
            name='description',
        ),
        migrations.RemoveField(
            model_name='fly',
            name='image',
        ),
        migrations.RemoveField(
            model_name='fly',
            name='tag_name',
        ),
        migrations.RemoveField(
            model_name='fly_type',
            name='article',
        ),
        migrations.RemoveField(
            model_name='fly_type',
            name='image',
        ),
        migrations.RemoveField(
            model_name='lake',
            name='tag_name',
        ),
        migrations.RemoveField(
            model_name='video',
            name='bug',
        ),
        migrations.RemoveField(
            model_name='video',
            name='fish',
        ),
        migrations.RemoveField(
            model_name='video',
            name='fly',
        ),
        migrations.RemoveField(
            model_name='video',
            name='lake',
        ),
        migrations.AddField(
            model_name='bug',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='bug',
            name='static_tag',
            field=models.SlugField(default='bug'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='bug_site',
            name='static_tag',
            field=models.SlugField(default='hatch'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='fish',
            name='static_tag',
            field=models.SlugField(default='fish'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='fly',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fly',
            name='snippet',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='fly',
            name='static_tag',
            field=models.SlugField(default='fly'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lake',
            name='static_tag',
            field=models.SlugField(default='lake'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='video',
            name='snippet',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='bug_site',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='fish',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='lake',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='log',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='temp',
            name='notes',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, upload_to='pictures/')),
                ('notes', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_added', models.DateField(default=django.utils.timezone.now)),
                ('snippet', models.CharField(blank=True, max_length=255)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('author', models.CharField(blank=True, max_length=100)),
                ('url', models.URLField(blank=True)),
                ('notes', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, upload_to='files/')),
                ('date_added', models.DateField(default=django.utils.timezone.now)),
                ('snippet', models.CharField(blank=True, max_length=255)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
    ]
